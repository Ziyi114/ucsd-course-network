{'CSE 3. Fluency in Information Technology (4)': ('Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks. ', None), 'CSE 4GS. Mathematical Beauty in Rome (4)': ('Exploration of topics in mathematics and engineering as they relate to classical architecture in Rome, Italy. In depth geometrical analysis and computer modeling of basic structures (arches, vaults, domes), and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter’s Basilica. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH10A  </span> (Calculus I                    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH20A  </span> (Calculus/Science &amp; Engineering)  <br/> '), 'CSE 6GS. Mathematical Beauty in Rome Lab (4)\t\t\t\t': ('Companion course to CSE 4GS where theory is applied and lab experiments are carried out “in the field” in Rome, Italy. For final projects, students will select a complex structure (e.g., the Colosseum, the Pantheon, St. Peter’s, etc.) to analyze and model, in detail, using computer-based tools. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH10A  </span> (Calculus I                    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH20A  </span> (Calculus/Science &amp; Engineering)  <br/> '), 'CSE 5A. Introduction to Programming I (4)': ('Introduction to algorithms and top-down problem solving. Introduction to the C language, including functions, arrays, and standard libraries. Basic skills for using a PC graphical user interface operating system environment. File maintenance utilities are covered. A student may not receive credit for CSE 5A after receiving credit for CSE 11 or CSE 8B. Recommended preparation: A familiarity with high school-level algebra is expected, but this course assumes no prior programming knowledge. ', None), 'CSE 7. Introduction to Programming with Matlab (4)': ('Fundamentals of computer programming and basic software design covering topics related to variables, functions, and control structures; writing, testing, and debugging programs in Matlab. Examples focus on scientific applications. Recommended preparation: high school algebra and familiarity with the computing milieu. Students with limited computing experience may take CSE 3 for preparation. Program or materials fees may apply. ', None), 'CSE 8A. Introduction to Computer Science: Java I (4)': ('Introductory course for students interested in computer science. Fundamental concepts of applied computer science using media computation. Exercises in the theory and practice of computer science. Hands-on experience with designing, editing, compiling, and executing programming constructs and applications. CSE 8A is part of a two-course sequence (CSE 8A and CSE 8B) that is equivalent to CSE 11. Students should take CSE 8B to complete this track. Formerly offered as corequisite courses CSE 8A plus 8AL. Students who have taken CSE 8B or CSE 11 may not take CSE 8A. Recommended preparation: No prior programming experience is assumed, but comfort using computers is helpful. Students should consult the ', None), 'CSE 8B. Introduction to Computer Science: Java II (4)': ('Continuation of the Java language. Continuation of programming techniques. More on inheritance. Exception handling. CSE 8B is part of a two-course sequence (CSE 8A and CSE 8B) that is equivalent to CSE 11. Students should consult the ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE8A    </span> (Intro/Computer Sci: Java (I)  )  <br/> '), 'CSE 11. Introduction to Computer Science and Object-Oriented Programming: Java (4)': ('An accelerated introduction to computer science and programming using the Java language. Basic UNIX. Modularity and abstraction. Documentation, testing and verification techniques. Basic object-oriented programming, including inheritance and dynamic binding. Exception handling. Event-driven programming. Experience with AWT library or other similar library. Students who have completed CSE 8B may not take CSE 11. Students should\xa0consult the ', None), 'CSE 12. Basic Data Structures and Object-Oriented Design (4)': ('Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE8B    </span> (Intro/Computer Sci. Java (II) )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE11    </span> (Intr/Computer Sci&amp;Obj-Ori:Java)  <br/> '), 'CSE 15L. Software Tools and Techniques Laboratory (2)': ('Hands-on exploration of software development tools and techniques. Investigation of the scientific process as applied to software development and debugging. Emphasis is on weekly hands-on laboratory experiences, development of laboratory notebooking techniques as applied to software design. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE8B    </span> (Intro/Computer Sci. Java (II) )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE11    </span> (Intr/Computer Sci&amp;Obj-Ori:Java)  <br/> '), 'CSE 20. Discrete Mathematics (4)': ('Basic discrete mathematical structures: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: prepositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness. Students who have completed MATH 109 may not receive credit for CSE 20. Credit not offered for both MATH 15A and CSE 20. Equivalent to MATH 15A. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">COGS7    </span> (Intro/Cognitive Neuroscience  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE8B    </span> (Intro/Computer Sci. Java (II) )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE11    </span> (Intr/Computer Sci&amp;Obj-Ori:Java)  <br/> '), 'CSE 21. Mathematics for Algorithms and Systems (4)': ('This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata.  ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE20    </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH15A  </span> (Intro/Discrete Mathematics    )  <br/> '), 'CSE 30. Computer Organization and Systems Programming (4)': ('Introduction to organization of modern digital computers—understanding the various components of a computer and their interrelationships. Study of a specific architecture/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> '), 'CSE 42. Building and Programming Electronic Devices (2) ': ('This course allows students to use what they learned in introductory programming courses to make things happen in the real world. Working in teams, students will first learn to program Arduino-based devices. Teams of students will design a custom device and program it to do their bidding. This course is targeted to freshmen and sophomores in engineering and science disciplines who want to practice applying what they have learned in a programming class and to have the chance to program things other than computers. Program or materials fees may apply. ', None), 'CSE 80. UNIX Lab (2)': ('The objective of the course is to help the programmer create a productive UNIX environment. Topics include customizing the shell, file system, shell programming, process management, and UNIX tools. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE8B    </span> (Intro/Computer Sci. Java (II) )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE11    </span> (Intr/Computer Sci&amp;Obj-Ori:Java)  <br/> '), 'CSE 86. C++ for Java Programmers (2)': ('Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> '), 'CSE 87. Freshman Seminar (1)': ('The Freshman Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman Seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering freshmen. ', None), 'CSE 90. Undergraduate Seminar (1)': ('A seminar providing an overview of a topic of current research interest to the instructor. The goal is to present a specialized topic in computer science and engineering students. May be taken for credit three times when topics vary.\xa0 ', None), 'CSE 91. Perspectives in Computer Science and Engineering (2)': ('A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions. ', None), 'CSE 99. Independent Study in Computer Science and Engineering (4)': ('Independent reading or research by special arrangement with a faculty member. ', None), 'CSE 100. Advanced Data Structures (4)': ('High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL. Credit not offered for both MATH 176 and CSE 100. Equivalent to MATH 176. Recommended preparation: background in C or C++ programming. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH154  </span> (Discrete Math &amp; Graph Theory  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH184A </span> (Combinatorics                 )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE5A    </span> (Introduction to Programming I )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE15    </span> (Engineering Computation       )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MAE9     </span> (C/C++ Programming             )  <br/> '), 'CSE 101. Design and Analysis of Algorithms (4)': ('Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> '), 'CSE 103. A Practical Introduction to Probability and Statistics (4)': ('Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, ECON 120A, or MATH 183. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH20A  </span> (Calculus/Science &amp; Engineering)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH20B  </span> (Calculus/Science &amp; Engineering)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH154  </span> (Discrete Math &amp; Graph Theory  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH184A </span> (Combinatorics                 )  <br/> '), 'CSE 105. Theory of Computability (4)': ('An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability. Credit not offered for both MATH 166 and CSE 105. Equivalent to MATH 166. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE20    </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH15A  </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH109  </span> (Mathematical Reasoning        )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH100A </span> (Abstract Algebra I            )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH103A </span> (Modern Algebra I              )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH184A </span> (Combinatorics                 )  <br/> '), 'CSE 106. Discrete and Continuous Optimization (4)': ('One frequently deals with problems in engineering, data science, business, economics, and other disciplines for which algorithmic solutions that optimize a given quantity under constraints are desired. This course is an introduction to the models, theory, methods, and applications of discrete and continuous optimization. Topics include shortest paths, flows, linear, integer, and convex programming, and continuous optimization techniques such as steepest descent and Lagrange multipliers. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH18   </span> (Linear Algebra                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31AH </span> (Honors Linear Algebra         )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH20C  </span> (Calculus&amp;Analyt Geom/Sci&amp;Engnr)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31BH </span> (Honors Multivariable Calculus )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH154  </span> (Discrete Math &amp; Graph Theory  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH184A </span> (Combinatorics                 )  <br/> '), 'CSE 107. Introduction to Modern Cryptography (4)': ('Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH154  </span> (Discrete Math &amp; Graph Theory  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH184  </span> (Enumerative Combinatorics     )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE101   </span> (Design &amp; Analysis of Algorithm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE105   </span> (Theory of Computation         )  <br/> '), 'CSE 110. Software Engineering (4)': ('Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE’s, version control, and test harnesses.                  ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> '), 'CSE 112. Advanced Software Engineering (4)': ('This course will cover software engineering topics associated with large systems development such as requirements and specifications, testing and maintenance, and design. Specific attention will be given to development tools and automated support environments. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE110   </span> (Software Engineering          )  <br/> '), 'CSE 113. Errors, Defects, and Failures (4)': ('Errors, resulting in defects and ultimately system failure, occur in engineering and also other areas such as medical care. The ways in which failures occur, and the means for their prevention, mitigation, and management, will be studied. Emphasis will be on software systems but also include the study of practice of other areas. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> '), 'CSE 118. Ubiquitous Computing (4)': ('Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">COGS102C </span> (Cognitive Design              )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">COGS121  </span> (Human Comptr Interac Prog Stud)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">COGS184  </span> (Modeling/Evolution of Cognitn )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">COMT111B </span> (Communicating and Computers   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">COMT115  </span> (Media&amp;Design/Soc Lrn Contexts )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE131   </span> (Compiler Construction         )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE132B  </span> (Database System Applications  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE111   </span> (Advanced Digital Design Proj  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE118   </span> (Computer Interfacing          )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE191   </span> (Engineering Group Design Proj )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE192   </span> (Senior Seminar in ECE         )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ICAM160B </span> (Senior Prjct/Computing Arts II)  <br/> '), 'CSE 120. Principles of Computer Operating Systems (4)': ('Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE101   </span> (Design &amp; Analysis of Algorithm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE110   </span> (Software Engineering          )  <br/> '), 'CSE 123. Computer Networks (4)': ('Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123 and ECE 158A. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE101   </span> (Design &amp; Analysis of Algorithm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE110   </span> (Software Engineering          )  <br/> '), 'CSE 124. Networked Services (4)': ('(Renumbered from CSE 123B.) The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol (TCP), remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE101   </span> (Design &amp; Analysis of Algorithm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE110   </span> (Software Engineering          )  <br/> '), 'CSE 125. Software System Design and Implementation (4)': ('Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor. ', None), 'CSE 127. Introduction to Computer Security (4)': ('Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE21    </span> (Math/Algorithm&amp;Systems Analys )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH154  </span> (Discrete Math &amp; Graph Theory  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH184A </span> (Combinatorics                 )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE120   </span> (Princ/Computer Operating Systm)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE123   </span> (Computer Networks             )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE124   </span> (Networked Services            )  <br/> '), 'CSE 130. Programming Languages: Principles and Paradigms (4)': ('(Formerly CSE 173.) Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages (e.g., Pascal, Ada, C++, PROLOG, ML.) Will involve programming in most languages studied. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE105   </span> (Theory of Computation         )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH166  </span> (Intro/Theory of Computation   )  <br/> '), 'CSE 131. Compiler Construction (4)': ('(Formerly CSE 131B.) Introduction to the compilation of programming languages, practice of lexical and syntactic analysis, symbol tables, syntax-directed translation, type checking, code generation, optimization, interpretation, and compiler structure. (Students may receive repeat credit for CSE 131A and CSE 131B by completing CSE 131.) ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE105   </span> (Theory of Computation         )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE130   </span> (Progrmng Lang:Princpl&amp;Paradigm)  <br/> '), 'CSE 132A. Database System Principles (4)': ('Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> '), 'CSE 132B. Database Systems Applications (4)': ('Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE132A  </span> (Database System Principles    )  <br/> '), 'CSE 134B. Web Client Languages (4)': ('Design and implementation of interactive World Wide Web clients using helper applications and plug-ins.\xa0The main language covered will be Java. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> '), 'CSE 135. Online Database Analytics Applications  (4)': ('Database, data warehouse, and data cube design; SQL programming and querying with emphasis on analytics; online analytics applications, visualizations, and data exploration; performance tuning. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> '), 'CSE 136. Enterprise-Class Web Applications (4)': ('Design and implementation of very large-scale, web-based applications. Topics covered typically include modeling organizational needs, design and revision management, J2EE or similar software platforms, web server and application server functionality, reuse of object-oriented components, model-view-controller and other design patterns, clustering, load-balancing, fault-tolerance, authentication, and usage accounting. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE135   </span> (Online Database Analytics Appl)  <br/> '), 'CSE 140. Components and Design Techniques for Digital Systems (4)': ('Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE20    </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH15A  </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH109  </span> (Mathematical Reasoning        )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> '), 'CSE 140L. Digital Systems Laboratory (2)': ('Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE20    </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH15A  </span> (Intro/Discrete Mathematics    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH109  </span> (Mathematical Reasoning        )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> '), 'CSE 141. Introduction to Computer Architecture (4)': ('Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE140   </span> (Component&amp;Desgn Tech/Digtl Sys)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE140L  </span> (Digital Systems Laboratory    )  <br/> '), 'CSE 141L. Project in Computer Architecture (2)': ('Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE30    </span> (Computer Organiz&amp;Systms Progrm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE140   </span> (Component&amp;Desgn Tech/Digtl Sys)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE140L  </span> (Digital Systems Laboratory    )  <br/> '), 'CSE 143. Microelectronic System Design (4)': ('VSLI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification.  ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE140   </span> (Component&amp;Desgn Tech/Digtl Sys)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE170A  </span> (Introduction to Digital Logic )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE81    </span> (Digital Systems               )  <br/> '), 'CSE 145. Embedded System Design Project (4)': ('Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building. ', None), 'CSE 148. Advanced Processor Architecture Design Project (4)': ('Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE141   </span> (Intro/Computer Architecture   )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE141L  </span> (Project/Computer Architecture )  <br/> '), 'CSE 150A. Introduction to Artificial Intelligence: Probabilistic Reasoning and Decision-Making (4)': ('Introduction to probabilistic models at the heart of modern artificial intelligence. Specific topics to be covered include probabilistic methods for reasoning and decision-making under uncertainty; inference and learning in Bayesian networks; prediction and planning in Markov decision processes; applications to intelligent systems, speech and natural language processing, information retrieval, and robotics. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC80    </span> (Practice of Data Science      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE103   </span> (Practical Intro/Prob &amp; Stats  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE109   </span> (Engineering Probability&amp;Stats )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECON120A </span> (Econometrics A                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH180A </span> (Introduction to Probability   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH183  </span> (Statistical Methods           )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH20A  </span> (Calculus/Science &amp; Engineering)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH18   </span> (Linear Algebra                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31AH </span> (Honors Linear Algebra         )  <br/> '), 'CSE 150B. Introduction to Artificial Intelligence: Search and Reasoning (4)': ('The course will introduce important ideas and algorithms in search and reasoning, and demonstrate how they are used in practical AI applications. Topics include A* search, adversarial search, Monte Carlo tree search, reinforcement learning, constraint solving and optimization, propositional and first-order reasoning. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC80    </span> (Practice of Data Science      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE103   </span> (Practical Intro/Prob &amp; Stats  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE109   </span> (Engineering Probability&amp;Stats )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECON120A </span> (Econometrics A                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH180A </span> (Introduction to Probability   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH183  </span> (Statistical Methods           )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> '), 'CSE 151. Introduction to Artificial Intelligence: Statistical Approaches (4)': ('Reasoning with probabilities, reasoning and learning with Bayesian networks, decision making under uncertainty, sequential decision making, statistical learning methods, and reinforcement learning. ', None), 'CSE 152. Introduction to Computer Vision (4)': ('The goal of computer vision is to compute scene and object properties from images and video. This introductory course includes feature detection, image segmentation, motion estimation, object recognition, and 3-D shape reconstruction through stereo, photometric stereo, and structure from motion. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH18   </span> (Linear Algebra                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH20F  </span> (Linear Algebra                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31AH </span> (Honors Linear Algebra         )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE101   </span> (Design &amp; Analysis of Algorithm)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC80    </span> (Practice of Data Science      )  <br/> '), 'CSE 154. Deep Learning (4)': ('This course covers the fundamentals of neural networks: we introduce linear regression, logistic regression, perceptrons, multilayer networks and back-propagation, convolutional neural networks, recurrent networks, and deep networks trained by reinforcement learning. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH20C  </span> (Calculus&amp;Analyt Geom/Sci&amp;Engnr)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31BH </span> (Honors Multivariable Calculus )  <br/> '), 'CSE 156. Statistical Natural Language Processing (4)': ('Natural language processing (NLP) is a field of AI which aims to equip computers with the ability to intelligently process natural (human) language. This course will explore statistical techniques for the automatic analysis of natural language data. Specific topics covered include probabilistic language models, which define probability distributions over text passages; text classification; sequence models; parsing sentences into syntactic representations; and machine translation. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC80    </span> (Practice of Data Science      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE103   </span> (Practical Intro/Prob &amp; Stats  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE109   </span> (Engineering Probability&amp;Stats )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECON120A </span> (Econometrics A                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH183  </span> (Statistical Methods           )  <br/> '), 'CSE 158. Recommender Systems and Web Mining (4)': ('Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE15L   </span> (Software Tools&amp;Techniques Lab )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC80    </span> (Practice of Data Science      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE103   </span> (Practical Intro/Prob &amp; Stats  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECE109   </span> (Engineering Probability&amp;Stats )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">ECON120A </span> (Econometrics A                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH181A </span> (Intro/Math Statistics I       )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH183  </span> (Statistical Methods           )  <br/> '), 'CSE 160. Introduction to Parallel Computing (4)': ('Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynns’ taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl’s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> '), 'CSE 163. Advanced Computer Graphics (4) ': ('Topics include an overview of many aspects of computer graphics, including the four main computer graphics areas of animation, modeling, rendering, and imaging. Programming projects in image and signal processing, geometric modeling, and real-time rendering. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE167   </span> (Computer Graphics             )  <br/> '), 'CSE 164. GPU Programming (4)': ('Principles and practices of programming graphics processing units (GPUs). GPU architecture and hardware concepts, including memory and threading models. Modern hardware-accelerated graphics pipeline programming. Application of GPU programming to rendering of game graphics, including physical, deferring, and global lighting models. Recommended preparation: ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE167   </span> (Computer Graphics             )  <br/> '), 'CSE 165. 3D User Interaction (4)': ('This course focuses on design and evaluation of three-dimensional (3D) user interfaces, devices, and interaction techniques. The course consists of lectures, literature reviews, and programming assignments. Students will be expected to create interaction techniques for several different 3D interaction devices. Program or materials fees may apply. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE167   </span> (Computer Graphics             )  <br/> '), 'CSE 166. Image Processing (4)': ('Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">DSC40B   </span> (Theor Fndtns of Data Sci II   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH18   </span> (Linear Algebra                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH20F  </span> (Linear Algebra                )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31AH </span> (Honors Linear Algebra         )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC80    </span> (Practice of Data Science      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> '), 'CSE 167. Computer Graphics (4)': ('Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications. Students may not receive credit for both MATH 155A and CSE 167. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> '), 'CSE 168. Computer Graphics II: Rendering (4)': ('Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE167   </span> (Computer Graphics             )  <br/> '), 'CSE 169. Computer Animation (4)': ('Advanced graphics focusing on the programming techniques involved in computer animation. Algorithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Recommended preparation: An understanding of linear algebra. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE167   </span> (Computer Graphics             )  <br/> '), 'CSE 170.  Interaction Design (5)': ('Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics: user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: Work with a team on a quarter-long design project. Cross-listed with COGS 120. Students may not receive credit for COGS 120 and CSE 170. Recommended preparation: Basic familiarity with HTML. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE8B    </span> (Intro/Computer Sci. Java (II) )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE11    </span> (Intr/Computer Sci&amp;Obj-Ori:Java)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSC30    </span> (DataStrc/Algrthms for Data Sci)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">COGS1    </span> (Introduction to Cognitive Sci )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">COGS187A </span> (Usability &amp; Info. Architecture)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">DSGN1    </span> (Design of Everyday Things     )  <br/> '), 'CSE 176A. Health Care Robotics (4)': ('Robotics has the potential to improve well-being for millions of people and support caregivers and to aid the clinical workforce. We bring together engineers, clinicians, and end-users to explore this exciting new field. The course is project-based, interactive, and hands-on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in health care robotics, human-robot teaming, and health design. Program or materials fees may apply. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">COGS120  </span> (Interaction Design            )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE110   </span> (Software Engineering          )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE170   </span> (Interaction Design            )  <br/> '), 'CSE 176E. Robot Systems Design and Implementation': ('End-to-end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or material fee may apply. May be coscheduled with CSE 276E.', None), 'CSE 180. Biology Meets Computing (4) ': ('Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">BILD1    </span> (The Cell                      )  <br/> '), 'CSE 181. Molecular Sequence Analysis (4)': ('This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding/DNA statistics. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE101   </span> (Design &amp; Analysis of Algorithm)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">BIMM100  </span> (Molecular Biology             )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CHEM114C </span> (Biosynthesis of Macromolecules)  <br/> '), 'CSE 182. Biological Databases (4)': ('This course provides an introduction to the features of biological data, how those data are organized efficiently in databases, and how existing data resources can be utilized to solve a variety of biological problems. Object oriented databases, data modeling and description. Survey of current biological database with respect to above, implementation of a database on a biological topic. Cross-listed with BIMM 182/BENG 182/CHEM 182. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE100   </span> (Advanced Data Structures      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH176  </span> (Advanced Data Structures      )  <br/> '), 'CSE 184. Computational Molecular Biology (4)': ('This advanced course covers the application of machine learning and modeling techniques to biological systems. Topics include gene structure, recognition of DNA and protein sequence patterns, classification, and protein structure prediction. Pattern discovery, Hidden Markov models/support victor machines/neural network/profiles. Protein structure prediction, functional characterization or proteins, functional genomics/proteomics, metabolic pathways/gene networks. Cross-listed with BIMM 184/BENG 184/CHEM 184. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">BENG181  </span> (Molecular Sequence Analysis   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">BIMM181  </span> (Molecular Sequence Analysis   )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE181   </span> (Molecular Sequence Analysis   )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">BENG182  </span> (Biological Databases          )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">BIMM182  </span> (Biological Databases          )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CHEM182  </span> (Biological Databases          )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE182   </span> (Biological Databases          )  <br/> '), 'CSE 185. Advanced Bioinformatics Laboratory (4)': ('This course emphasizes the hands-on application of bioinformatics to biological problems. Students will gain experience in the application of existing software, as well as in combining approaches to answer specific biological questions. Topics include sequence alignment, fast database search, comparative genomics, expression analysis, computational proteomics, genome-wide association studies, next-generation sequencing, genomics, and big data. Students may not receive credit for CSE 185 and BIMM 185. Restricted to CS27, BI34, BE28, and CH37 major codes. ', ' border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE8B    </span> (Intro/Computer Sci. Java (II) )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CSE11    </span> (Intr/Computer Sci&amp;Obj-Ori:Java)  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">CSE12    </span> (Basic Data Struct &amp; OO Design )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">MATH20C  </span> (Calculus&amp;Analyt Geom/Sci&amp;Engnr)  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">MATH31BH </span> (Honors Multivariable Calculus )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">BILD1    </span> (The Cell                      )  <br/> and border-width:1px; border-color: #C0C0C0; padding:5px 5px 5px 5px;"> <span class="bold_text">BIEB123  </span> (Molculr Mthd/Evol &amp; Ecol Lab  )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">BILD4    </span> (Introductory Biology Lab      )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">BIMM101  </span> (Recombinant DNA Techniques    )  <br/> <center><span class="ertext">or</span></center> <span class="bold_text">CHEM109  </span> (Recombinant DNA Laboratory    )  <br/> '), 'CSE 190. Topics in Computer Science and Engineering (4)': ('Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor. ', None), 'CSE 191. Seminar in CSE (1–4)': ('A seminar course on topics of current interest. Students, as well as, the instructor will be actively involved in running the course/class. This course cannot be counted toward a technical elective. ', None), 'CSE 192. Senior Seminar in Computer Science and Engineering (1)': ('The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE (at the upper-division level). Topics will vary from quarter to quarter. Senior seminars may be taken for credit up to four times, with a change in topic, and permission of the department. Enrollment is limited to twenty students, with preference given to seniors. (P/NP grades only.) ', None), 'CSE 193. Introduction to Computer Science Research': ('Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning. Course participants apprentice with a CSE research group, and propose an original research project. ', None), 'CSE 195. Teaching (4)': ('Teaching and tutorial assistance in a CSE course under the supervision of the instructor. (P/NP grades only.) ', None), 'CSE 197. Field Study in Computer Science and Engineering (4, 8, 12, or 16)': ('Directed study and research at laboratories away from the campus. (P/NP grades only.) ', None), 'CSE 198. Directed Group Study (2 or 4)': ('Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member. (P/NP grades only.) ', None), 'CSE 199. Independent Study for Undergraduates (2 or 4)': ('Independent reading or research by special arrangement with a faculty member. (P/NP grades only.) ', None), 'CSE 199H. CSE Honors Thesis Research for Undergraduates (4)': ('Undergraduate research for completing an honors project under the supervision of a CSE faculty member. May be taken across multiple quarters. Students should enroll for a letter grade. May be taken for credit three times. ', None), 'CSE 200. Computability and Complexity (4)': ('Computability review, including halting problem, decidable sets, r.e. sets, many-one reductions; TIME(t(n)), SPACE(s(n)) and general relations between these classes; L, P, PSPACE, NP; NP—completeness; hierarchy theorems; RP, BPP. ', None), 'CSE 201A. Advanced Complexity (4) ': ('Polynomial-time hierarchy (PH), BPP in second level of PH, Savitch’s theorem, NL=coNL, nonuniform and circuit complexity, some circuit lower bounds, IP=PSPACE, probabilistic proof checking (PCP), application of PCP to approximation hardness, complexity of proof systems, parallel complexity classes NC and AC, P-completeness. Recommended preparation: CSE 200. ', None), 'CSE 202. Algorithm Design and Analysis (4)': ('The basic techniques for the design and analysis of algorithms. Divide-and-conquer, dynamic programming, data structures, graph search, algebraic problems, randomized algorithms, lower bounds, probabilistic analysis, parallel algorithms. ', None), 'CSE 203A. Advanced Algorithms (4)': ('Modern advances in design and analysis of algorithms. Exact syllabus varies. Topics include approximation, randomized algorithms, probabilistic analysis, heuristics, online algorithms, competitive analysis, models of memory hierarchy, parallel algorithms, number-theoretic algorithms, cryptanalysis, computational geometry, computational biology, network algorithms, VLSI CAD algorithms. ', None), 'CSE 205A. Logic in Computer Science (4)': ('(Formerly CSE 208D) Mathematical logic as a tool in computer science. Propositional logic, resolution, first-order logic, completeness and incompleteness theorems with computational viewpoint, finite model theory, descriptive complexity, logic programming, nonmonotonic reasoning, temporal logic. Applications to databases, automatic theorem proving, program verification, and distributed systems. ', None), 'CSE 206A. Lattice Algorithms and Applications (4)': ('(Formerly CSE 207C) Introduction to the algorithmic theory of point lattices (aka algorithmic geometry of numbers), and some of its most important applications in cryptography and cryptanalysis. Topics usually include: LLL basis reduction algorithm, cryptanalysis of broadcast RSA, hardness of approximating lattice problems. ', None), 'CSE 207. Modern Cryptography (4)': ('Private and public key cryptography, introduction to reduction based proofs of security, concrete security, block ciphers, pseudorandom functions and generators, symmetric encryption, asymmetric encryption, computational number theory, RSA and discrete log systems, message authentication, digital signatures, key distribution and key management. ', None), 'CSE 208. Advanced Cryptography (4)': ('Zero-knowledge, secure computation, session-key distribution, protocols, electronic payment, one-way functions, trapdoor permutations, pseudorandom bit generators, hardcore bits. ', None), 'CSE 209A. Topics/Seminar in Algorithms, Complexity, and Logic (1–4)': ('Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 209B. Topics/Seminar in Cryptography (1–4)': ('Topics of special interest in cryptography to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 210. Principles of Software Engineering (4)': ('(Formerly CSE 264A.) General principles in modern software engineering. Both theoretical and practical topics are covered. Theoretical topics include proofs of correctness, programming language semantics, and theory of testing. Practical topics include structured programming, modularization techniques, design of languages for reliable programming, and software tools. ', None), 'CSE 211. Software Testing and Analysis (4)': ('Survey of testing and analysis methods. Introduction to advanced topics in area as well as traditional production methods. Topics include inspections and reviews, formal analysis, verification and validation standards, nonstatistical testing, statistical-testing and reliability models, coverage methods, testing and analysis tools, and organization management and planning. Methods special to special development approaches such as object-oriented testing will also be described. ', None), 'CSE 216. Research Topics in Human-Computer Interaction (4)': ('Prepares students to conduct original HCI research by reading and discussing seminal and cutting-edge research papers. Topics include design, social software, input techniques, mobile, and ubiquitous computing. Student pairs perform a quarter-long mini research project that leverages campus research efforts. Cross-listed with COGS 230. ', None), 'CSE 218. Advanced Topics in Software Engineering (4)': ('This course will cover a current topic in software engineering in depth. Topics in the past have included software tools, impacts of programming language design, and software system structure. (S/U grades permitted.) ', None), 'CSE 219. Design at Large (1)': ('New societal challenges, cultural values, and technological opportunities are changing design—and vice versa. The seminar explores this increased scale, real-world engagement, and disruptive impact. Invited speakers from UC San Diego and beyond share cutting-edge research on interaction, design, and learning. Cross-listed with COGS 229. (S/U grades only.) ', None), 'CSE 221. Operating Systems (4)': ('Operating system structures, concurrent computation models, scheduling, synchronization mechanisms, address spaces, memory management protection and security, buffering, streams, data-copying reduction techniques, file systems, naming, caching, disk organization, mapped files, remote file systems, case studies of major operating systems. ', None), 'CSE 222A. Computer Communication Networks (4)': ('(Formerly CSE 222.) Computer communication network concepts, protocols, and architectures, with an emphasis on an analysis of algorithms, protocols, and design methodologies. Topics will include layering, error control, flow control, congestion control, switching and routing, quality of service management, mobility, naming, security, and selected contemporary topics. ', None), 'CSE 222B. Internet Algorithmics (4)': ('(Formerly CSE 228H.) Techniques for speeding up internet implementations, including system restructuring, new algorithms, and hardware innovations. Topics include models for protocols, systems and hardware; efficiency principles; applying these principles to deriving techniques for efficient implementation of common endnode and router functions. ', None), 'CSE 223B. Distributed Computing and Systems (4)': ('Efficient primitives for distributed operating systems and high-performance network servers, including concurrent and event-driven server architectures, remote procedure calls, and load shedding. Distributed naming, directory, and storage services, replication for fault tolerance, and security in distributed systems. ', None), 'CSE 224. Graduate Networked Systems (4)': ('This course will provide a broad understanding of network design and implementation. Topics include techniques for building distributed applications, sockets programming, remote procedure calls (RPC), scale-out distributed directories, distributed consensus and state management, fault tolerance, networked storage, indirection, overlay networks, load balancing, and datacenter design. ', None), 'CSE 227. Computer Security (4)': ('Security and threat models, risk analysis, authentication and authorization, auditing, operating systems security, access control mechanisms, protection mechanisms, distributed systems/network security, security architecture, electronic commerce security mechanisms, security evaluation. ', None), 'CSE 229A. Topics/Seminar in Computer Systems (1–4)': ('Discussion on problems of current research interest in computer systems. Possible areas of focus include: distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 229C. Topics/Seminar in Computer Security (1–4)': ('Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 230. Principles of Programming Languages (4)': ('(Formerly CSE 273.) Functional versus imperative programming. Type systems and polymorphism; the ML language. Higher order functions, lazy evaluation. Abstract versus concrete syntax, structural and well-founded induction. The lambda calculus, reduction strategies, combinators. Denotational semantics, elementary domain theory. ', None), 'CSE 231. Advanced Compiler Design (4)': ('(Formerly CSE 264C.) Advanced material in programming languages and translator systems. Topics include compilers, code optimization, and debugging interpreters. ', None), 'CSE 232. Principles of Database Systems (4)': ('(Formerly CSE 264D.) Database models including relational, hierarchic, and network approaches. Implementation of databases including query languages and system architectures. ', None), 'CSE 232B. Database System Implementation (4)': ('A hands-on approach to the principles of databases implementation. Algebraic rewriters/optimizers, query processors, triggers. Beyond centralized relational databases. ', None), 'CSE 233. Database Theory (4)': ('Theory of databases. Theory of query languages, dependency theory, deductive databases, incomplete information, complex objects, object-oriented databases, and more. Connections to logic and complexity theory including finite model theory and descriptive complexity. ', None), 'CSE 237A. Introduction to Embedded Computing (4)': ('Embedded system technologies including processors, DSP, memory, and software. System interfacing basics, communication strategies, sensors, and actuators. Mobile and wireless technology in embedded systems. Using predesigned hardware and software components. Design case studies in wireless, multimedia, and/or networking domains. ', None), 'CSE 237B. Software for Embedded Systems (4)': ('Embedded computing elements, device interfaces, time-critical IO handling. Embedded software design under size, performance, and reliability constraints. Software timing and functional validation. Programming methods and compilation for embeddable software. Embedded runtime systems. Case studies of real-time software systems. ', None), 'CSE 237C. Validation and Testing of Embedded Systems (4)': ('Embedded system building blocks including IP cores. Cosimulation. Formal verification using model checking. Verification environments. Test challenges in core integration: compliance, feature, random, and collision testing. Core access and test integration. Interface-based verification and standards. ', None), 'CSE 237D. Design Automation and Prototyping for Embedded Systems (4)': ('System representation and modeling. Abstract and language models. Simulation as a modeling activity. Computational and hw/sw system prototypes. System analysis using models. Constraint and interface modeling. Behavioral compilation and synthesis. ', None), 'CSE 239A. Topics/Seminar in Databases (1–4)': ('Discussion on problems of current research interest in databases. Possible areas of focus include: core database issues, data management on the web, data integration, new database models and applications, formal methods in databases. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 240A. Principles of Computer Architecture (4)': ('(Formerly CSE 240.) This course will cover fundamental concepts in computer architecture. Topics include instruction set architecture, pipelining, pipeline hazards, bypassing, dynamic scheduling, branch prediction, superscalar issue, memory-hierarchy design, advanced cache architectures, and multiprocessor architecture issues. ', None), 'CSE 240B. Parallel Computer Architecture (4)': ('This course covers advanced topics in parallel computer architecture, including on-chip and off-chip interconnection networks, cache coherence, cache consistency, hardware multithreading, multi-core and tiled architectures. It incorporates the latest research and development on parallel architectures and compilation techniques for those architectures. CSE 240A recommended. ', None), 'CSE 240C. Advanced Microarchitecture (4)': ('This course covers advanced topics in computer architecture. It incorporates the latest research and development on topics such as branch prediction, instruction-level parallelism, cache hierarchy design, speculative multithreading, reliable architectures, and power-management techniques. CSE 240A recommended. ', None), 'CSE 241A/ECE 260B. VLSI Integration of Computing Circuitry (4)': ('VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation. ', None), 'CSE 243A. Introduction to Synthesis Methodologies in VLSI CAD (4)': ('Hardware software codesign, architectural level synthesis, control synthesis and optimization, scheduling, binding, register and bus sharing, interconnect design, module selection, combinational logic optimization, state minimization, state encoding, and retiming. ', None), 'CSE 244A. VLSI Test (4)': ('Design for test, testing economics, defects, failures and faults, fault models, fault simulation, automatic test pattern generation, functional testing, memory, PLA, FPGA, microprocessor test, and fault diagnosis. ', None), 'CSE 245. Computer Aided Circuit Simulation and Verification (4)': ('This course is about the computer algorithms, techniques, and theory used in the simulation and verification of electrical circuits. ', None), 'CSE 248. Algorithmic and Optimization Foundations for VLSI CAD (4)': ('Algorithmic techniques and optimization frameworks for large-scale, difficult optimizations. Primal-dual multicommodity flow approximations, approximations for geometric and graph Steiner formulations, continuous placement optimization, heuristics for Boolean satisfiability, multilevel methods, semidefinite programming, and application to other formulations (e.g., scheduling). ', None), 'CSE 249A. Topics/Seminar in Computer Architecture (1–4)': ('Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 249B. Topics/Seminar in VLSI (1–4)': ('Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. ', None), 'CSE 250A. Principles of Artificial Intelligence: Probabilistic Reasoning and Learning  (4)': ('Methods based on probability theory for reasoning and learning under uncertainty. Content may include directed and undirected probabilistic graphical models, exact and approximate inference, latent variables, expectation-maximization, hidden Markov models, Markov decision processes, applications to vision, robotics, speech, and/or text. Recommended preparation: CSE 103 or similar course. ', None), 'CSE 250B. Principles of Artificial Intelligence: Learning Algorithms  (4)': ('Algorithms for supervised and unsupervised learning from data. Content may include maximum likelihood; log-linear models, including logistic regression and conditional random fields; nearest neighbor methods; kernel methods; decision trees; ensemble methods; optimization algorithms; topic models; neural networks; and backpropagation. Recommended preparation: CSE 103 or similar course. ', None), 'CSE 250C. Machine Learning Theory (4)': ('Theoretical foundations of machine learning. Topics include concentration of measure, the PAC model, uniform convergence bounds, and VC dimension. Possible topics include online learning, learning with expert advice, multiarmed bandits, and boosting. Recommended preparation: CSE 103 and CSE 101 or similar course. ', None), 'CSE 252A. Computer Vision I (4)': ('Comprehensive introduction to computer vision providing broad coverage including low-level vision (image formation, photometry, color, image feature detection), inferring 3-D properties from images (shape-from shading, stereo vision, motion interpretation) and object recognition. Companion to CSE 252B covering complementary topics. ', None), 'CSE 252B. Computer Vision II (4)': ('Comprehensive introduction to computer vision providing focused coverage of multiview geometry, structure from motion, image segmentation, motion segmentation, texture analysis and recognition, object detection, and image-based rendering. Companion to CSE 252A covering complementary topics. ', None), 'CSE 252C. Selected Topics in Vision and Learning (1–4)': ('Selected topics in computer vision and statistical pattern recognition, with an emphasis on recent developments. Possible topics include: grouping and segmentation, object recognition and tracking, multiple view geometry, kernel-based methods, dimensionality reduction, and mixture models. ', None), 'CSE 253. Neural Networks for Pattern Recognition (4) ': ('Probability density estimation, perceptrons, multilayer neural networks, radial basis function networks, support vector machines, error functions, data preprocessing. Possible topics include unsupervised learning methods, recurrent networks, and mathematical learning theory. Recommended preparation: CSE 250B or equivalent. ', None), 'CSE 254. Statistical Learning (4)': ('Learning algorithms based on statistics. Possible topics include minimum-variance unbiased estimators, maximum likelihood estimation, likelihood ratio tests, resampling methods, linear logistic regression, feature selection, regularization, dimensionality reduction, manifold detection. An upper-division undergraduate course on probability and statistics such as MATH 183 or 186, or any graduate course on statistics, pattern recognition, or machine learning is recommended. ', None), 'CSE 255. Data Mining and Predictive Analytics (4) ': ('Learning methods for applications. Content may include data preparation, regression and classification algorithms, support vector machines, random forests, class imbalance, overfitting, decision theory, recommender systems and collaborative filtering, text mining, analyzing social networks and social media, protecting privacy, A/B testing. Recommended preparation: CSE 103 or similar. ', None), 'CSE 258. Recommender Systems and Web Mining (4)': ('Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice. Recommended preparation: No previous background in machine learning is required, but students should be comfortable with programming (all example code will be in Python), and with basic optimization and linear algebra. ', None), 'CSE 258A. Cognitive Modeling (4)': ('Connectionist models and a sampling of other cognitive modeling techniques. Models of language processing, memory, sequential processes, and vision. Areas covered may vary depending on student and faculty interests. Can be repeated for credit. CSE 151 or CSE 250B or CSE 253 or CSE 254, or equivalent experience recommended. ', None), 'CSE 259. Seminar in Artificial Intelligence (1)': ('A weekly meeting featuring local (and occasional external) speakers discussing their current research in Artificial Intelligence Neural Networks, and Genetic Algorithms. (S/U grades only.) ', None), 'CSE 260. Parallel Computation (4)': ('(Formerly CSE 274A.) This course provides an overview of parallel hardware, algorithms, models, and software. Topics include Flynn’s taxonomy, interconnection networks, memory organization, a survey of commercially available multiprocessors, parallel algorithm paradigms and complexity criteria, parallel programming environments and tools for parallel debugging, language specification, mapping, performance, etc. ', None), 'CSE 262. System Support for Applications of Parallel Computation (4)': ('This course will explore design of software support for applications of parallel computation. Topics include: programming languages, run time support, portability, and load balancing. The course will terminate in a project. ', None), 'CSE 272. Advanced Image Synthesis (4)': ('Computer graphics techniques for creating realistic images. Topics include ray tracing, global illumination, subsurface scattering, and participating media. CSE 168 or equivalent recommended.', None), 'CSE 274. Selected Topics in Graphics (2–4)': ('Selected topics in computer graphics, with an emphasis on recent developments. Possible topics include computer animation, shape modeling and analysis, image synthesis, appearance modeling, and real-time rendering. CSE 168 or CSE 169 recommended. ', None), 'CSE 276A. Introduction to Robotics (4)': ('This course provides an introduction to the fundamentals of robotics across kinematics, sensor systems, estimation, control, and planning. The contents include introduction to robotics in general, kinematics of robot systems, robot arm systems, sensors for robots, basic vision for robots, estimation methods, perception, robot localization and navigation, control of robot systems, robot motion planning, robot task planning, robot architectures, and evaluation of robot systems. It is expected that students have a solid understanding of linear algebra, can program in Python or C++, and have a basic understanding of methods for reasoning under uncertainty. ', None), 'CSE 276B. Human Robot Interaction (4)': ('Robots are entering human spaces. How do we make them functional, useful, and acceptable? This course explores the core computational, engineering, and experimental challenges in human-robot interaction. Course topics include shared autonomy, perception of people and context, coordination, collaboration, human-guided learning, robot design, and experimental robotics. Students will review seminal and recent papers in the field and engage in team-based projects with physical, mobile robots. This class requires expertise in software development. Prior exposure to robotics, computer vision, or machine learning is recommended. Students should be comfortable reading and analyzing scientific papers at the graduate level. Students may not receive credit for CSE 276B and CSE 291 (A00) taught winter 2017 with the same subtitle. ', None), 'CSE 276C. Mathematics for Robotics (4)': ('The course will provide a comprehensive introduction to the key mathematical concepts used for modeling, implementing, and evaluation of robot systems. The course will use small home assignments tasks and a larger robot project to exercise the topics covered in class. The students should have a basic knowledge of mathematics and know one or more programming languages such as Python or Matlab for completion of homework assignments. ', None), 'CSE 276D. Healthcare Robotics (4)': ('Robotics has the potential to improve well-being for millions of people, support care givers, and aid the clinical workforce. This course brings together engineers, clinicians, and end-users to explore this exciting new field. It is project-based, interactive, and hands on, and involves working closely with stakeholders to develop prototypes that solve real-world problems.\xa0Students will explore the latest research in healthcare robotics, human-robot teaming, and health design. JSOE students should be comfortable building and experimenting within their area of expertise (e.g., CSE, software development, MAE, rapid prototyping). Students with clinical backgrounds should be familiar with translational research methods. Students may not receive credit for CSE 276D and CSE 291 (H00) taught spring 2017 with the same subtitle. Program or materials fees may apply. ', None), 'CSE 280A. Algorithms in Computational Biology (4)': ('(Formerly CSE 206B.) The course focuses on algorithmic aspects of modern bioinformatics and covers the following topics: computational gene hunting, sequencing, DNA arrays, sequence comparison, pattern discovery in DNA, genome rearrangements, molecular evolution, computational proteomics, and others. ', None), 'CSE 282/BENG 202. Bioinformatics II: Sequence and Structure Analysis—Methods and Applications (4)': ('(Formerly CSE 257A/BENG 202.) Introduction to methods for sequence analysis. Applications to genome and proteome sequences. Protein structure, sequence-structure analysis. ', None), 'CSE 283/BENG 203. Bioinformatics III: Functional Genomics (4)': ('Annotating genomes, characterizing functional genes, profiling, reconstructing pathways. ', None), 'CSE 284. Personal Genomics for Bioinformaticians (4)': ('This course provides an introduction to bioinformatics techniques for analyzing and interpreting human genomes. Topics covered include an introduction to medical and population genetics, ancestry, finding and interpreting disease-causing variants, genome-wide association studies, genetic risk prediction, analyzing next-generation sequencing data, how to scale current genomics techniques to analyze hundreds of thousands of genomes, and the social impact of the personal genomics revolution. Programming experience, familiarity with the UNIX command line, and a basic course in probability and statistics are strongly recommended. Students may not receive credit for CSE 284 and CSE 291 (E00) taught winter 2017 with the same subtitle. ', None), 'CSE 290. Seminar in Computer Science and Engineering (1–4)': ('(Formerly CSE 280A.) A seminar course in which topics of special interest in computer science and engineering will be presented by staff members and graduate students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. (S/U grades only.) ', None), 'CSE 291. Topics in Computer Science and Engineering (1–4)': ('Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be taken for credit nine times with the consent of instructor. ', None), 'CSE 292. Faculty Research Seminar (1)': ('(Formerly CSE 282.) Computer science and engineering faculty will present one-hour seminars of the current research work in their areas of interest. ', None), 'CSE 293. Special Project in Computer Science and Engineering (1–12)': ('The student will conceive, design, and execute a project in computer science under the direction of a faculty member. The project will typically include a large programming or hardware design task, but other types of projects are possible. ', None), 'CSE 294. Research Meeting in CSE (2)': ('Advanced study and analysis of active research in computer science and computer engineering. Discussion of current research and literature in the research specialty of the staff member teaching the course. ', None), 'CSE 298. Independent Study (1–16)': ('Open to properly qualified graduate students who wish to pursue a problem through advanced study under the direction of a member of the staff. (S/U grades only.) ', None), 'CSE 299. Research (1–16)': ('Research. ', None), 'CSE 500. Teaching Assistantship (2–4)': ('A course in which teaching assistants are aided in learning proper teaching methods by means of supervision of their work by the faculty: handling of discussions, preparation and grading of examinations and other written exercises, and student relations. May be used to meet teaching experience requirement for candidates for the PhD degree. Number of units for credit depends on number of hours devoted to class or section assistance. ', None), 'CSE 599. Teaching Methods in Computer Science (2)': ('Training in teaching methods in the field of computer science. This course examines theoretical and practical communication and teaching techniques particularly appropriate to computer science. ', None)}